# Generated by Django 3.1.5 on 2021-04-08 16:37

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.IntegerField()),
                ('question', models.CharField(max_length=200)),
                ('is_resolved', models.BooleanField(null=True)),
                ('non_compliance_type', models.CharField(choices=[('Professional & Staff Hygiene', 'Professional & Staff Hygiene'), ('Housekeeping & General Cleanliness', 'Housekeeping & General Cleanliness'), ('Workplace Safety & Health', 'Workplace Safety & Health'), ('Healthier Choice', 'Healthier Choice'), ('Food Hygiene', 'Food Hygiene')], max_length=100)),
                ('unresolved_photo', models.CharField(blank=True, max_length=100)),
                ('unresolved_comments', models.TextField(blank=True)),
                ('unresolved_date', models.DateTimeField(null=True)),
                ('resolved_photo', models.CharField(blank=True, max_length=100)),
                ('resolved_comments', models.TextField(blank=True)),
                ('resolved_date', models.CharField(blank=True, default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auditor_id', models.IntegerField(default=0)),
                ('tenant_id', models.IntegerField(default=0)),
                ('company', models.CharField(max_length=30)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('outlet_type', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('report_notes', models.CharField(blank=True, max_length=500)),
                ('report_date', models.DateTimeField(default=datetime.datetime.now)),
                ('resolution_date', models.CharField(blank=True, max_length=100)),
                ('staffhygiene_score', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('housekeeping_score', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('safety_score', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('healthierchoice_score', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('foodhygiene_score', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='CaseStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unresolved_date', models.DateTimeField(null=True)),
                ('reported', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.case')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=30)),
                ('company', models.CharField(blank='True', max_length=30)),
                ('location', models.CharField(blank='True', max_length=200)),
                ('institution', models.CharField(blank='True', max_length=30)),
                ('type', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
